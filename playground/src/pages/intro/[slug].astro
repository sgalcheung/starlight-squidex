---
// uri: column/intro/100002201
// uri: column/intro/new-hotel-offerings

import { CatalogComponent } from "@/components/ShadcnComponents.tsx";
import Layout from "@/layouts/Layout.astro";
import { COLUMN } from "@/helpers/constants";
import { getCatalogs } from "@/scripts/services";
import { SQUIDEX_CONTENT_SCHEMAS } from "@/content/schemas";
import { getEntry } from "astro:content";
import { Markdown } from "astro-remote";

const { slug } = Astro.params;
if (!slug || slug === undefined) return Astro.redirect("/404");

Astro.cookies.set(COLUMN, slug, { path: "/" });

// load from cached
const intro = await getEntry(SQUIDEX_CONTENT_SCHEMAS.INTRODUCTIONS, slug);
if (!intro) return Astro.redirect("/404");

const catalogs = await getCatalogs(intro);
if (!catalogs) return Astro.redirect("/404");

// const catalogs = dataMap(intro);
---

<!-- <a href=`/${COLUMN_ARTICLE_PATH}/index?cid=${slug}`>start explore</a> -->
<Layout>
  <main class="mx-auto max-w-[85rem] w-full px-4 sm:px-6 lg:px-8">
    <div class="flex flex-row">
      <Markdown content={intro.data.data.description.iv ?? ""} />
    </div>

    <div data-intro class="flex">
      <!-- <template data-column-slug={slug}></template>
        <template data-catalogs={catalogs}></template> -->

      <div class="w-1/2 p-4">
        <CatalogComponent data={catalogs} client:visible />
      </div>

      <div class="w-1/2 p-4">
        <div class="hs-accordion-group">
          {
            catalogs.map((catalog, index) => {
              return (
                <div
                  class={`hs-accordion ${
                    index === 0 ? "active" : ""
                  } bg-white border -mt-px first:rounded-t-lg last:rounded-b-lg dark:bg-neutral-800 dark:border-neutral-700`}
                  id={`hs-basic-nested-heading-${index}`}
                >
                  <button
                    class="hs-accordion-toggle hs-accordion-active:text-blue-600 inline-flex items-center justify-between gap-x-3 w-full font-semibold text-start text-gray-800 py-4 px-5 hover:text-gray-500 disabled:opacity-50 disabled:pointer-events-none dark:hs-accordion-active:text-blue-500 dark:text-neutral-200 dark:hover:text-neutral-400 dark:focus:outline-hidden dark:focus:text-neutral-400"
                    aria-expanded={index === 0 ? "true" : "false"}
                    aria-controls={`hs-basic-nested-collapse-${index}`}
                  >
                    {catalog.label}
                    <svg
                      class="hs-accordion-active:hidden block size-4"
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path d="m6 9 6 6 6-6" />
                    </svg>
                    <svg
                      class="hs-accordion-active:block hidden size-4"
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path d="m18 15-6-6-6 6" />
                    </svg>
                  </button>
                  <div
                    id={`hs-basic-nested-collapse-${index}`}
                    class={`hs-accordion-content w-full overflow-hidden transition-[height] duration-300 ${
                      index === 0 ? "" : "hidden"
                    }`}
                    role="region"
                    aria-labelledby={`hs-basic-nested-heading-${index}`}
                  >
                    <div class="hs-accordion-group ps-6">
                      {catalog.items.map((item) => {
                        return (
                          <div class="pb-4 px-5">
                            <p>
                              <a
                                class="text-blue-600 hover:text-blue-500 decoration-2 hover:underline focus:outline-hidden focus:underline opacity-90"
                                href={item.link}
                              >
                                {item.label}
                              </a>
                            </p>
                          </div>
                        );
                      })}
                    </div>
                  </div>
                </div>
              );
            })
          }
        </div>
      </div>
    </div>
  </main>
</Layout>

<!-- <script>
    import { getElement } from '@/helpers/dom.js';

    for (const intro of document.querySelectorAll('[data-intro]')) {
        const data_column_slug = getElement('[data-column-slug]', HTMLElement, intro);

        if (data_column_slug.dataset.slug) {
            const slug = data_column_slug.dataset.slug;
        
            localStorage.setItem('column', slug);
        }

        const data_catalogs = getElement('[data-catalogs]', HTMLElement, intro);

        if (data_catalogs.dataset.catalogs) {
            const catalogs = data_catalogs.dataset.catalogs;
        
            localStorage.setItem('catalogs', catalogs);
        }
    }
</script> -->
