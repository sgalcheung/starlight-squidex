---
// uri: column/article/8217

import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
// import OpenAPIParser from '@readme/openapi-parser'
// import type { InferGetStaticPropsType } from 'astro'

// import { getPageProps } from '../libs/starlight'

// import Operation from './operation/Operation.astro'
// import Overview from './Overview.astro'
import { getArticle, getIntro, getSidebar } from "@/scripts/api";
// import { dataMap } from "@/lib/convert";
import { COLUMN } from "@/helpers/constants";
import type { StarlightUserConfig } from "@astrojs/starlight/types";
import { getCatalogsFromRedis } from "@/scripts/services";

export const prerender = false;

// export function getStaticPaths() {
//   return getSchemaStaticPaths()
// }

// type Props = InferGetStaticPropsType<typeof getStaticPaths>

// const { schema } = Astro.props;

// schema.document = await OpenAPIParser.dereference(schema.document)

// const isOverview = type === 'overview'

// const title = isOverview ? 'Overview' : Astro.props.operation.title;
const title = "Overview";
// console.log(Astro.props) // {}

const { id } = Astro.params;

const { articles } = await getArticle(id);
if (!articles || articles.length !== 1) return Astro.redirect("/404");

const article = articles[0].flatData;

const frontmatter = { title: article.name ?? "Untitled" };

let catalogs: StarlightUserConfig["sidebar"] = [];
// let intro;

if (Astro.cookies.has(COLUMN)) {
	const cookie = Astro.cookies.get(COLUMN);
	const column = cookie?.value;
	if (column) {
		catalogs = await getCatalogsFromRedis(column);
	}
} else {
	// Direct access from specific article link
	// TODO: query by article link
	// const { sidebars } = await getSidebar(id);
	// if (!sidebars || sidebars.length !== 1) return Astro.redirect("/404");
	// const sidebar = sidebars[0].flatData;
	// const chapters = sidebar!.chapters!;
	// catalogs = dataMap(chapters);
	// await storeRedis(column, JSON.stringify(catalogs), CATALOGS_CACHE_TIME);
}

// catalogs = dataMap(intro);
---

<div data-starlight>
  <StarlightPage frontmatter={frontmatter} sidebar={catalogs}>
    <!-- {isOverview ? <Overview {schema} /> : <Operation {schema} operation={Astro.props.operation} />} -->
    <!-- <Overview {schema} /> -->
    <div data-content>
      <!-- <template data-column></template>
      <template data-catalogs></template> -->
      <article set:html={article.content} />
    </div>
  </StarlightPage>
</div>

<!-- <script>
    import { getElement } from '@/helpers/dom.js';

    const catalogs = localStorage.getItem('catalogs');
    for (const starlight of document.querySelectorAll('[data-starlight]')) {
        const sidebar = getElement('[data-sidebar]', HTMLElement, starlight);

        if (catalogs) {
            sidebar.setAttribute('sidebar', catalogs);
        }
    }
    console.log(JSON.stringify(catalogs))
</script> -->
